{"version":3,"sources":["js/utils/AppUtil.js","js/common/constants/GlobalConstants.js","i18n.js","js/comment/components/Comment.js","js/comment/components/CommentsView.js","js/comment/constants/CommentConstants.js","js/comment/actions/CommentsActions.js","js/comment/components/CommentsCnt.js","js/app/components/App.js","I18N/I18NHelper.js","js/app/constants/AppConstants.js","js/app/components/AppContainer.js","js/app/actions/AppActions.js","js/app/reducers/AppReducer.js","js/comment/reducers/CommentReducer.js","js/store/StoreConfigure.js","index.js","js/app/AppHelper.js"],"names":["AppUtil","ajax","url","data","successFn","failureFn","option","headers","body","JSON","stringify","method","fetch","then","response","json","result","catch","err","APP_URL_CONSTANTS","resources","en","translation","de","fr","zh","pt","i18n","use","LanguageDetector","reactI18nextModule","init","lng","fallbackLng","keySeparator","interpolation","escapeValue","Comment","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","commentTxt","initialEditComment","commentEditMode","showDeleteConfirmation","commentRef","React","createRef","onCommentChange","bind","_assertThisInitialized","addComment","openEditMode","updateComment","cancelUpdate","replyComment","cancelReply","showDeleteBox","closeDeleteBox","deleteComment","_createClass","key","value","_comment$upvote","_this$props","this","user","comment","editMode","upvoteComment","replyOnComment","_this$state","isEditMode","commentEditProps","placeholder","onInput","ref","contentEditable","dangerouslySetInnerHTML","__html","createElement","className","concat","src","profilePhoto","alt","name","id","DeleteIcon","onClick","Object","assign","text","Button","variant","disabled","trim","ArrowDropUpIcon","upvote","startIcon","ChatBubbleOutlineOutlinedIcon","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","setState","event","currentTarget","innerHTML","_replyOnComment$child","_this$props2","postComment","_objectSpread","createdBy","showReplyBox","children","crypto","randomUUID","_toConsumableArray","current","Component","defaultProps","CommentsView","loadComments","comments","Fragment","getCreateCommentJSX","getCommentsJSX","AppHelper","getAppData","_this2","map","createComment","COMMENT_CONSTANT","INIT_COMMENTS","CREATE_COMMENT","UPVOTE_COMMENT","UPDATE_COMMENT","DELETE_COMMENT","dispatch","GET_COMMENTS","undefined","type","payload","connect","App","source","_handleKeyDown","_handleClickEvents","_handleWindowResize","document","addEventListener","window","navigator","language","userLanguage","changeLanguage","initAppComp","CommentsCnt","keyCode","removeEventListener","APP_CONSTANT","ownProps","appData","initialState","appReducer","arguments","length","action","showMask","upvoteCommentData","upvoteComments","index","_upvoteComment$upvote","updateCommentData","updateComments","deleteCommentData","deleteComments","filter","dc","CommentReducer","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","setAppStore","setParamMap","responseConfig","initConfig","config","setAppUrls","URLs","ReactDOM","render","Provider","AppContainer","getElementById","module","exports","paramsConfig","getLoggedInUser","userData","getParamData","setParamData","paramsData","configData","setAppData","getUserAction","actions","setUserAction","paramConfigData","location","href","indexOf","slice","split","forEach","p","paramSplit","factory"],"mappings":"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","file":"static/js/main.4259266c.chunk.js","sourcesContent":["let appStore;\n\nexport const setAppStore = store => {\n    appStore = store;\n}\n\nexport const getAppStore = () => appStore;\n\nconst AppUtil = {\n    ajax(url, data, successFn, failureFn) {\n        const option = {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        };\n\n        if ( data ) {\n            option.body = JSON.stringify(data);\n            option.method = 'POST';\n        }\n\n        fetch(url, option)\n            .then( response => response.json() )\n            .then( result => {\n                    if (successFn) {\n                        successFn(result);\n                    }\n                }\n            )\n            .catch(function (err) {\n                if (failureFn) {\n                    failureFn(err);\n                }\n            });\n    }\n}\n\nexport default AppUtil;\n","export const GLOBAL_CONSTANTS = {\n    ESCAPE_KEY: 27,\n    ENTER_KEY: 13,\n    F1_KEY: 112,\n    YES: 'Y',\n    NO: 'N',\n\n    //Tab Constants\n    TAB_PARENT_ORDER: '1',\n    TAB_CHILD_ORDER: '2',\n    TAB_POSITIONS: '3',\n\n    //ORDER Constants\n    ORDER_STATUS_OPEN: 'Open',\n    ORDER_STATUS_PARTIAL: 'Partial',\n    ORDER_STATUS_CANCELLED: 'Cancelled',\n    ORDER_STAUTS_COMPLETED: 'Completed',\n    ORDER_STATUS_REJECTED: 'Rejected'\n}\n\nexport const APP_URL_CONSTANTS = {\n    \n}\n\nexport const setAppUrls = config => {\n\tif ( config ) {\n\t\tfor ( const key in config ) {\n\t\t\tAPP_URL_CONSTANTS[key] = config[key];\n\t\t}\n\t}\n}","import i18n from \"i18next\";\nimport { reactI18nextModule } from \"react-i18next\";\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport translationEN from './I18N/en/translation.json';//English\nimport translationDE from './I18N/de/translation.json';//German\nimport translationFR from './I18N/fr/translation.json';//French\nimport translationCN from './I18N/zh/translation.json';//Chinese\nimport translationBR from './I18N/pt/translation.json';//Portugese\n\n// the translations\nconst resources = {\n  en: {\n    translation: translationEN\n  },\n  de: {\n    translation: translationDE\n  },\n  fr: {\n    translation: translationFR\n  },\n  zh: {\n    translation: translationCN\n  },\n  pt: {\n    translation: translationBR\n  }\n};\n\ni18n\n  .use(LanguageDetector) // detect user language\n  .use(reactI18nextModule) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: \"en\",\n    fallbackLng: \"en\", // use en if detected lng is not available\n\n    keySeparator: false, // we do not use keys in form messages.welcome\n\n    interpolation: {\n      escapeValue: false // react already safes from xss\n    }\n  });\n\nexport default i18n;","import React from 'react';\nimport Button from '@mui/material/Button';\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\nimport ChatBubbleOutlineOutlinedIcon from '@mui/icons-material/ChatBubbleOutlineOutlined';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport './../../../assets/sass/comment/Comment.scss';\n\nclass Comment extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n            commentTxt: '',\n            initialEditComment: '',\n            commentEditMode: false,\n            showDeleteConfirmation: false\n        };\n\n        this.commentRef = React.createRef();\n\n        this.onCommentChange = this.onCommentChange.bind(this);\n        this.addComment = this.addComment.bind(this);\n        this.openEditMode = this.openEditMode.bind(this);\n        this.updateComment = this.updateComment.bind(this);\n        this.cancelUpdate = this.cancelUpdate.bind(this);\n        this.replyComment = this.replyComment.bind(this);\n        this.cancelReply = this.cancelReply.bind(this);\n        this.showDeleteBox = this.showDeleteBox.bind(this);\n        this.closeDeleteBox = this.closeDeleteBox.bind(this);\n        this.deleteComment = this.deleteComment.bind(this);\n\t}\n\n\trender() {\n        const { user, comment, editMode, upvoteComment, replyOnComment } = this.props;\n        const { commentTxt, commentEditMode, initialEditComment, showDeleteConfirmation } = this.state;\n        const isEditMode = editMode || commentEditMode;\n        const commentEditProps = {\n            placeholder: 'Enter comment to post...',\n            onInput: this.onCommentChange,\n            ref: this.commentRef,\n            contentEditable: 'true'\n        }\n\n        if ( commentEditMode ) {\n            commentEditProps.dangerouslySetInnerHTML = {\n                __html: initialEditComment\n            }\n        }\n        \n\t\treturn (\n\t\t\t<div className={`comment-box ${ replyOnComment ? 'comment-box-reply' : '' }`}>\n                <div className='comment'>\n                    <div className='comment-user'>\n                        <img src={ user.profilePhoto } alt={ user.name } className='user-img'></img>\n                    </div>\n                    <div className='comment-cnt'>\n                        <div className='comment-hdr'>\n                            <span className='user-name bold'>{ user.name }</span>\n                            {\n                                comment.id &&\n                                    <DeleteIcon onClick={ this.showDeleteBox } />\n                            }\n                        </div>\n                        <div className={`comment-body ${ editMode ? '' : 'comment-body-read' }`} >\n                            {\n                                isEditMode &&\n                                    <div className='comment-input' { ...commentEditProps }></div>\n                            }\n                            {\n                                !isEditMode && \n                                    <div className='comment-txt'\n                                        dangerouslySetInnerHTML= {{\n                                            __html: comment.text\n                                        }}\n                                        onClick={ this.openEditMode }\n                                    ></div>\n                            }\n                        </div>\n                    </div>\n                </div>\n                <div className={`comment-action ${ isEditMode ? 'comment-action-edit' : '' }`}>\n                    {\n                        replyOnComment &&\n                            <Button onClick={ this.cancelReply }>Cancel</Button>\n                    }\n                    {\n                        !comment.id &&\n                            <Button variant='contained' disabled={ !commentTxt || !commentTxt.trim() }\n                                onClick={ this.addComment    }>Post</Button>\n                    }\n                    {\n                        comment.id &&\n                            <div className='comment-action-list'>\n                                <div className='comment-act-upvote'>\n                                    <ArrowDropUpIcon onClick={ upvoteComment.bind(this, comment) } />\n                                    <span className='upvote-count'>{ comment.upvote??0 }</span>\n                                    <Button\n                                        onClick={ this.replyComment }\n                                        className='reply-bnt'\n                                        startIcon={ <ChatBubbleOutlineOutlinedIcon /> }\n                                    >\n                                        Reply\n                                    </Button>\n                                </div>\n                                {\n                                    commentEditMode &&\n                                        <div className='comment-act-buttons'>\n                                            <Button onClick={ this.cancelUpdate }>Cancel</Button>\n                                            <Button variant='contained' disabled={ initialEditComment === commentTxt }\n                                                onClick={ this.updateComment }>Update</Button>\n                                        </div>\n                                }\n                            </div>\n                    }\n                </div>\n                {\n                    <Dialog open={ showDeleteConfirmation } onClose={ this.closeDeleteBox }>\n                        <DialogTitle >\n                            Are your sure about deleting post?\n                        </DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>\n                                Deleting a post will remove it permanently along with any replies added on it.\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={ this.closeDeleteBox }>CANCEL</Button>\n                            <Button onClick={ this.deleteComment } variant='contained'>DELETE</Button>\n                        </DialogActions>\n                    </Dialog>\n                }\n            </div>\n\t\t)\n\t}\n\n    showDeleteBox() {\n        this.setState({\n            showDeleteConfirmation: true\n        })\n    }\n\n    closeDeleteBox() {\n        this.setState({\n            showDeleteConfirmation: false\n        })\n    }\n\n    deleteComment() {\n        this.props.deleteComment( this.props.comment );\n    }\n\n    onCommentChange(event) {\n        this.setState({\n            commentTxt: event.currentTarget.innerHTML\n        })\n    }\n\n    addComment() {\n        const { replyOnComment, postComment, user } = this.props;\n\n        if ( replyOnComment ) {\n            this.props.updateComment({\n                ...replyOnComment,\n                comment: replyOnComment.text,\n                createdBy: this.props.user,\n                showReplyBox: false,\n                children: [{\n                    id: crypto.randomUUID(),\n                    comment: this.state.commentTxt.trim(),\n                    createdBy: user\n                }, ...(replyOnComment.children??[])]\n            });\n        } else {\n            this.commentRef.current.innerHTML = '';\n\n            postComment(this.state.commentTxt.trim(), user);\n        }\n    }\n\n    openEditMode() {\n        this.setState({\n            commentEditMode: true,\n            initialEditComment: this.props.comment.text,\n            commentTxt: this.props.comment.text\n        })\n    }\n\n    updateComment() {\n        this.props.updateComment({\n            ...this.props.comment,\n            comment: this.state.commentTxt,\n            createdBy: this.props.user\n        });\n\n        this.cancelUpdate();\n    }\n\n    cancelUpdate() {\n        this.setState({\n            commentEditMode: false,\n            initialEditComment: '',\n            commentTxt: ''\n        })\n    }\n\n    replyComment() {\n        this.props.updateComment({\n            ...this.props.comment,\n            comment: this.props.comment.text,\n            createdBy: this.props.user,\n            showReplyBox: true\n        });\n    }\n\n    cancelReply() {\n        this.props.updateComment({\n            ...this.props.replyOnComment,\n            comment: this.props.replyOnComment.text,\n            createdBy: this.props.user,\n            showReplyBox: false\n        });\n    }\n}\n\nComment.defaultProps = {\n    comment: {}\n}\n\nexport default Comment;\n","import React from 'react';\nimport Comment from './Comment';\nimport AppHelper from './../../app/AppHelper';\n\nclass CommentsView extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {};\n        this.postComment = this.postComment.bind(this);\n\t}\n\n\tcomponentDidMount() {\n        this.props.loadComments();\n\t}\n\t\n\trender() {\n        const { comments } = this.props;\n\n        if ( !comments ) {\n            return false;\n        }\n\n\t\treturn (\n\t\t\t<React.Fragment>\n                <div className='comments-list'>\n                    {\n                        this.getCreateCommentJSX()\n                    }\n                    {\n                        this.getCommentsJSX(comments)\n                    }\n                </div>\n            </React.Fragment>\n\t\t)\n\t}\n\n    getCreateCommentJSX(replyOnComment) {\n        const { updateComment } = this.props;\n\n        return (\n            <Comment user={ AppHelper.getAppData('loggedInUser') } editMode={ true } \n                postComment={ this.postComment } replyOnComment={ replyOnComment }\n                updateComment={ updateComment }\n            />\n        )\n    }\n\n    getCommentsJSX(comments) {\n        const { upvoteComment, updateComment, deleteComment } = this.props;\n\n        return (\n            <div className='comment-list-item'>\n                {\n                    comments.map( comment => {\n                        return (\n                            <React.Fragment key={ comment.id }>\n                                <Comment\n                                    user={ comment.createdBy }\n                                    comment={ {\n                                        id: comment.id,\n                                        text: comment.comment,\n                                        upvote: comment.upvote,\n                                        children: comment.children\n                                    } }\n                                    upvoteComment={ upvoteComment }\n                                    updateComment={ updateComment } \n                                    deleteComment={ deleteComment }\n                                />\n                                {\n                                    comment.showReplyBox && this.getCreateCommentJSX(comment)\n                                }\n                                {\n                                    comment.children && this.getCommentsJSX(comment.children)\n                                }\n                            </React.Fragment>\n                        )\n                    } )   \n                }\n            </div>\n        )\n    }\n\n    postComment(comment, user) {\n        this.props.createComment({\n            id: crypto.randomUUID(),\n            comment: comment,\n            createdBy: user\n        })\n    }\n}\n\nexport default CommentsView;\n","export const COMMENT_CONSTANT = {\n    INIT_COMMENTS: 'INIT_COMMENTS',\n    CREATE_COMMENT: 'CREATE_COMMENT',\n    UPVOTE_COMMENT: 'UPVOTE_COMMENT',\n    UPDATE_COMMENT: 'UPDATE_COMMENT',\n    DELETE_COMMENT: 'DELETE_COMMENT'\n};\n","import { COMMENT_CONSTANT } from './../constants/CommentConstants';\nimport AppUtil from 'js/utils/AppUtil';\nimport { APP_URL_CONSTANTS } from './../../common/constants/GlobalConstants';\n\nexport const initComments = data => {\n    return {\n        type: COMMENT_CONSTANT.INIT_COMMENTS,\n        payload: {\n            data\n        }\n    }\n}\n\nexport const loadComments = () => {\n    return dispatch => {\n        AppUtil.ajax(APP_URL_CONSTANTS.GET_COMMENTS, undefined, response => {\n            dispatch( initComments(response) );\n        })\n    }\n}\n\nexport const createComment = comment => {\n    return {\n        type: COMMENT_CONSTANT.CREATE_COMMENT,\n        comment\n    }\n}\n\nexport const upvoteComment = comment => {\n    return {\n        type: COMMENT_CONSTANT.UPVOTE_COMMENT,\n        comment\n    }\n}\n\nexport const updateComment = comment => {\n    return {\n        type: COMMENT_CONSTANT.UPDATE_COMMENT,\n        comment\n    }\n}\n\nexport const replyComment = (replyOnComment, comment) => {\n    return {\n        type: COMMENT_CONSTANT.REPLY_COMMENT,\n        replyOnComment,\n        comment\n    }\n}\n\nexport const deleteComment = comment => {\n    return {\n        type: COMMENT_CONSTANT.DELETE_COMMENT,\n        comment\n    }\n}\n","import { connect } from 'react-redux';\nimport CommentsView from './CommentsView';\nimport { loadComments, createComment, upvoteComment, updateComment, deleteComment } from '../actions/CommentsActions';\n\nconst mapStateToProps = state => {\n    const { comments } = state.comments;\n    \n    return {\n        comments\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        loadComments: () => {\n            dispatch( loadComments() )\n        },\n        createComment: comment => {\n            dispatch( createComment(comment) )\n        },\n        upvoteComment: comment => {\n            dispatch( upvoteComment(comment) )\n        },\n        updateComment: comment => {\n            dispatch( updateComment(comment) )\n        },\n        deleteComment: comment => {\n            dispatch( deleteComment(comment) )\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentsView);\n","import { changeLanguage } from 'I18N/I18NHelper';\nimport React from 'react';\nimport { GLOBAL_CONSTANTS } from './../../common/constants/GlobalConstants';\nimport CommentsCnt from '../../comment/components/CommentsCnt';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.source = this.props.source;\n\n        this._handleKeyDown = this._handleKeyDown.bind(this);\n        this._handleClickEvents = this._handleClickEvents.bind(this);\n        this._handleWindowResize = this._handleWindowResize.bind(this);\n\n        document.addEventListener(\"keydown\", this._handleKeyDown);\n        document.addEventListener(\"click\", this._handleClickEvents);\n        window.addEventListener(\"resize\", this._handleWindowResize);\n\n        changeLanguage(navigator.language || navigator.userLanguage);\n    };\n\n    componentDidMount() {\n        this.props.initAppComp();\n    };\n\n    render() {\n        return (\n            <div id=\"flexiple-comments\">\n               <CommentsCnt />\n            </div>\n        )\n    };\n\n    _handleKeyDown(event) {\n        switch (event.keyCode) {\n            case GLOBAL_CONSTANTS.ESCAPE_KEY:\n                break;\n            case GLOBAL_CONSTANTS.ENTER_KEY:\n                break;\n            case GLOBAL_CONSTANTS.F1_KEY:\n                break;\n            default:\n                break;\n        }\n    };\n\n    _handleClickEvents() {\n        // click event hadling\n    };\n\n    _handleWindowResize() {\n        //window resize\n    };\n\n    componentWillUnmount() {\n        document.removeEventListener(\"keydown\", this._handleKeyDown);\n        document.removeEventListener(\"click\", this._handleClickEvents);\n        window.removeEventListener(\"resize\", this._handleWindowResize);\n    };\n}\n\nexport default App;\n","import React from \"react\";\nimport { Trans } from 'react-i18next';\nimport i18n from '../i18n';\nimport AppHelper from 'js/app/AppHelper';\n\nexport const getI18NMessageString = str => {\n    const suffix = \"_\" + AppHelper.getAppData('sourceType');\n    let i18nText = i18n.t(str + suffix);\n\n    if ( i18nText.endsWith(suffix) ) {\n        i18nText = i18n.t(str);\n    }\n\n    return i18nText;\n};\n\nexport const getI18NMessage = str => <Trans>{ getI18NMessageString(str) }</Trans>;\n\nexport const changeLanguage = lng => {\n    i18n.changeLanguage(lng);\n}","export const APP_CONSTANT = {\n    INIT_APP: 'INIT_APP'\n};\n","import { connect } from 'react-redux';\nimport App from './App';\nimport { initAppComp } from '../actions/AppActions';\n\nconst mapStateToProps = (state, ownProps) => {\n    const { appData } = state.appData;\n\n    return {\n        appData\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        initAppComp: () => {\n            dispatch( initAppComp() );\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { APP_CONSTANT } from '../constants/AppConstants';\n\nexport const initAppComp = () => {\n    return {\n        type: APP_CONSTANT.INIT_APP\n    }\n}\n","import { APP_CONSTANT } from '../constants/AppConstants';\n\nconst initialState = {\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case APP_CONSTANT.INIT_APP:\n            return {\n                ...state,\n                appData: {\n                    showMask: false\n                }\n            }\n        default:\n            return state;\n    }\n};\n\nexport default appReducer;","import { COMMENT_CONSTANT } from './../constants/CommentConstants';\n\nconst initialState = {};\n\nconst CommentReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case COMMENT_CONSTANT.INIT_COMMENTS:\n            return {\n                ...state,\n                comments: action.payload.data\n            }\n        case COMMENT_CONSTANT.CREATE_COMMENT:\n            return {\n                ...state,\n                comments: [action.comment, ...state.comments]\n            }\n        case COMMENT_CONSTANT.UPVOTE_COMMENT:\n            return {\n                ...state,\n                comments: upvoteCommentData(state.comments, action.comment)\n            }\n        case COMMENT_CONSTANT.UPDATE_COMMENT:\n            return {\n                ...state,\n                comments: updateCommentData(state.comments, action.comment)\n            }\n        case COMMENT_CONSTANT.DELETE_COMMENT:\n            return {\n                ...state,\n                comments: deleteCommentData(state.comments, action.comment)\n            }\n        default:\n            return state;\n    }\n};\n\nconst upvoteCommentData = (comments, comment) => {\n    const upvoteComments = [...comments];\n\n    for ( const index in upvoteComments ) {\n        const upvoteComment = upvoteComments[index];\n        \n        if ( upvoteComment.id === comment.id ) {\n            upvoteComments[index] = {\n                ...upvoteComment,\n                upvote: (upvoteComment.upvote??0) + 1\n            }\n\n            break;\n        } else if ( upvoteComment.children ) {\n            upvoteComments[index] = {\n                ...upvoteComment,\n                children: upvoteCommentData(upvoteComment.children, comment)\n            }\n        }\n    }\n\n    return upvoteComments;\n}\n\nconst updateCommentData = (comments, comment) => {\n    const updateComments = [...comments];\n\n    for ( const index in updateComments ) {\n        const updateComment = updateComments[index];\n        \n        if ( updateComment.id === comment.id ) {\n            updateComments[index] = comment;\n            break;\n        } else if ( updateComment.children ) {\n            updateComments[index] = {\n                ...updateComment,\n                children: updateCommentData(updateComment.children, comment)\n            }\n        }\n    }\n\n    return updateComments;\n}\n\nconst deleteCommentData = (comments, comment) => {\n    let deleteComments = [...comments];\n\n    for ( const index in deleteComments ) {\n        const deleteComment = deleteComments[index];\n        \n        if ( deleteComment.id === comment.id ) {\n            deleteComments = deleteComments.filter( dc => dc.id !== comment.id );\n            break;\n        } else if ( deleteComment.children ) {\n            deleteComments[index] = {\n                ...deleteComment,\n                children: deleteCommentData(deleteComment.children, comment)\n            }\n        }\n    }\n\n    return deleteComments;\n}\n\nexport default CommentReducer;\n","import {\n    createStore,\n    applyMiddleware,\n    compose,\n    combineReducers\n} from 'redux';\nimport thunk from 'redux-thunk';\nimport appReducer from 'js/app/reducers/AppReducer';\nimport CommentReducer from './../comment/reducers/CommentReducer'\n\nconst rootReducer = combineReducers({\n    appData: appReducer,\n    comments: CommentReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore( rootReducer, composeEnhancers( applyMiddleware(thunk) ) );\n\nexport default store;\n","import AppHelper from 'js/app/AppHelper';\nimport AppUtil, { setAppStore } from 'js/utils/AppUtil';\nimport { setAppUrls } from './js/common/constants/GlobalConstants';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './assets/sass/styles.scss';\nimport './i18n';\nimport AppContainer from './js/app/components/AppContainer';\nimport store from './js/store/StoreConfigure';\n\nsetAppStore(store);\n\nAppHelper.setParamMap();\n\nAppUtil.ajax( '/data/AppConfig.json', undefined, responseConfig => {\n    AppHelper.initConfig( responseConfig );\n\n    setAppUrls( responseConfig.URLs );\n\n    ReactDOM.render((\n        <Provider store={ store }>\n            <AppContainer />\n        </Provider>)\n    , document.getElementById('root'));\n} );\n","/**\n * NOTE: This file is AMD supported\n *\n * This file will only contain methods written in plain javascript\n *\n **/\n(function ( root, factory ) {\n    if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    }\n} (this, function () {\n    let config;\n    let paramsConfig = {};\n\n    return {\n        /**\n         * this api return the json object of logged in User.\n         */\n        getLoggedInUser () {\n            return config && config.userData;\n        },\n\n        /**\n         * this api return the param value passed in story mapping URL.\n         */\n        getParamData ( key ) {\n            return paramsConfig[key];\n        },\n\n        /**\n         * this api return the param value passed in story mapping URL.\n         */\n        setParamData ( paramsData ) {\n            paramsConfig = paramsData;\n        },\n\n        /**\n         * This method will send an ajax call to get the application/user related config from the server\n         */\n        initConfig ( configData ) {\n            config = configData;\n        },\n\n        /**\n         * this api return the config value given in initConfig api.\n         */\n        getAppData ( key ) {\n            return config ? config[ key ] : undefined;\n        },\n\n        /**\n         * this api sets app config according to passed key and value\n         */\n        setAppData ( key, value ) {\n            if ( config ) {\n                config[ key ] = value;\n            }\n        },\n\n        /**\n         * this api return the user action\n         */\n        getUserAction ( key ) {\n            return config && config.actions ? config.actions[ key ] : undefined;\n        },\n\n        /**\n         * this api sets the user action\n         */\n        setUserAction ( key, value ) {\n            config.actions[ key ] = value;\n        },\n\n        setParamMap (paramConfigData) {\n            if ( paramConfigData ) {\n                paramsConfig = paramConfigData;\n            } else {\n                let paramsData;\n\n                if ( window.location.href.indexOf('?') !== -1 ) {\n                    paramsData = window.location.href.slice( window.location.href.indexOf('?') + 1, window.location.href.length );\n                } else {\n                    paramsData = window.location.href.slice( window.location.href.indexOf('&') + 1, window.location.href.length );\n                }\n\n                if (paramsData !== '') {\n                    const paramsArr = paramsData.split( '&' );\n        \n                    paramsArr.forEach( p => {\n                        const paramSplit = p.split( '=' );\n        \n                        paramsConfig[ paramSplit[0] ] = paramSplit[1];\n                    } );\n                }\n            }\n        }\n    };\n}));\n"],"sourceRoot":""}